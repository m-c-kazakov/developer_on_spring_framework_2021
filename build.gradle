plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.0' apply false
    id 'org.springframework.boot' version '2.7.1' apply false
    id 'io.spring.dependency-management' version '1.0.12.RELEASE' apply false
}


version '1.0-SNAPSHOT'

allprojects {
    group 'org.otus'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    apply plugin: "io.spring.dependency-management"
    dependencyManagement {
        dependencies {
            imports {
                mavenBom("org.springframework.boot:spring-boot-dependencies:${Versions.springBootDependencies}")
            }
            dependency("org.springframework.boot:spring-boot-starter:${Versions.springBootDependencies}")
            dependency("org.springframework.shell:spring-shell-starter:${Versions.springShellStarter}")
            dependency("org.jline:jline-reader:${Versions.jlineReader}")
            dependency("com.github.cloudyrock.mongock:mongock-spring-v5:${Versions.mongockSpringV5}")
            dependency("com.github.cloudyrock.mongock:mongodb-springdata-v3-driver:${Versions.mongockSpringV5}")
            dependency("org.slf4j:slf4j-api:${Versions.slf4jApi}")
            dependency("org.apache.logging.log4j:log4j-core:${Versions.log4jCore}")

            dependency("org.testcontainers:mongodb:${Versions.testcontainers}")
            dependency("org.testcontainers:junit-jupiter:${Versions.testcontainers}")

            dependency("org.springframework.batch:spring-batch-test:${Versions.springBatchTest}")



        }
    }

    configurations.all {
        resolutionStrategy {
            failOnVersionConflict() // сборка падает в случае появления конфликта между зависимостями
        }
        resolutionStrategy {
            // Явно указать какую версию зависимости взять
            // при появлении конфликта между зависимостями
            force("org.jline:jline-terminal:${Versions.jlineTerminal}")
            force("org.jetbrains:annotations:${Versions.jetbrainsAnnotations}")
            force("net.java.dev.jna:jna:${Versions.jna}")
        }
    }
}